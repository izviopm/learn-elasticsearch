### create index customers
PUT http://localhost:9200/customers

### create index products
PUT http://localhost:9200/products

### create index orders
PUT http://localhost:9200/orders

### show all indeces
GET http://localhost:9200/_cat/indices?v

### update customers mapping
PUT http://localhost:9200/customers/_mapping
Content-Type: application/json

{
    "date_detection": true,
    "dynamic_date_formats": [
        "yyyy-MM-dd HH:mm:ss",
        "yyyy-MM-dd",
        "yyyy/MM/dd HH:mm:ss",
        "yyyy/MM/dd"
    ]
}

### update customers mapping
PUT http://localhost:9200/customers/_mapping
Content-Type: application/json

{
    "numeric_detection": true
}

### get mapping customers
GET http://localhost:9200/customers/_mapping

### update products mapping
PUT http://localhost:9200/products/_mapping
Content-Type: application/json

{
    "date_detection": true,
    "dynamic_date_formats": [
        "yyyy-MM-dd HH:mm:ss",
        "yyyy-MM-dd",
        "yyyy/MM/dd HH:mm:ss",
        "yyyy/MM/dd"
    ]
}

### update products mapping
PUT http://localhost:9200/products/_mapping
Content-Type: application/json

{
    "numeric_detection": true
}

### get mapping products
GET http://localhost:9200/products/_mapping

### update orders mapping
PUT http://localhost:9200/orders/_mapping
Content-Type: application/json

{
    "date_detection": true,
    "dynamic_date_formats": [
        "yyyy-MM-dd HH:mm:ss",
        "yyyy-MM-dd",
        "yyyy/MM/dd HH:mm:ss",
        "yyyy/MM/dd"
    ]
}

### update orders mapping
PUT http://localhost:9200/orders/_mapping
Content-Type: application/json

{
    "numeric_detection": true
}

### get mapping orders
GET http://localhost:9200/orders/_mapping


### insert customer izvio
POST http://localhost:9200/customers/_create/izvio
Content-Type: application/json

{
    "name": "Izvio Prijaya Mumin",
    "registered_at": "2023-02-22 15:40:00"
}

### get mapping customers
GET http://localhost:9200/customers/_mapping

### create product 1
POST http://localhost:9200/products/_create/1
Content-Type: application/json

{
    "name": "Indomie Goreng Ayam Bawang",
    "price": "2000"
}

### create product 2
POST http://localhost:9200/products/_create/2
Content-Type: application/json

{
    "name": "Best Wok Mie Goreng Original",
    "price": 2000
}

### get mapping products
GET http://localhost:9200/products/_mapping

### create orders 1
POST http://localhost:9200/orders/_create/1
Content-Type: application/json

{
    "order_date": "2023-10-06 10:25:20",
    "customer_id": "izvio",
    "total": "12000",
    "items": [
        {
            "product_id": "1",
            "price": "2000",
            "quantity": "2"
        },
        {
            "product_id": "2",
            "price": "2000",
            "quantity": "4"
        }
    ]
}

### get mapping orders
GET http://localhost:9200/orders/_mapping

### get customers meta data
GET http://localhost:9200/customers/_doc/izvio

### get products meta data
GET http://localhost:9200/products/_doc/6

### get customers source data
GET http://localhost:9200/customers/_source/izvio

### multi get products 1 and 2
GET http://localhost:9200/products/_mget
Content-Type: application/json

{
    "ids": [
        "1",
        "2"
    ]
}

### get order 1 and customer izvio
GET http://localhost:9200/_mget
Content-Type: application/json

{
    "docs": [
        {
            "_id": "1",
            "_index": "orders"
        },
        {
            "_id": "izvio",
            "_index": "customers"
        }
    ]
}

#The difference between a created API and an indexed API is that when the data already exists, the data will be updated, and there won't be an error in the response.
### add product using index
PUT http://localhost:9200/products/_doc/3
Content-Type: application/json

{
    "name": "Zouya Barebone Keyboard GMK67",
    "price": 750000
}

### add product using index
PUT http://localhost:9200/products/_doc/4
Content-Type: application/json

{
    "name": "Acer Predator XXI",
    "price": 25000000
}

### add product using index
PUT http://localhost:9200/products/_doc/5
Content-Type: application/json

{
    "name": "Iphone 14 Pro 128Gb",
    "price": 20000000
}

### add product using index
PUT http://localhost:9200/products/_doc/6
Content-Type: application/json

{
    "name": "Akko V3 Cream Blue Pro Switch (45pcs)",
    "price": 250000
}

### get all data in index products
GET http://localhost:9200/products/_search

### update product 4
POST http://localhost:9200/products/_update/4
Content-Type: application/json

{
    "doc": {
        "price": 30000000
    }
}

### insert customer spammer
POST http://localhost:9200/customers/_create/spammer
Content-Type: application/json

{
    "name": "Spammer",
    "register_at": "2023-01-01 00:00:00"
}

### get all data in index customers
GET http://localhost:9200/customers/_search

### delete customer spammer
DELETE http://localhost:9200/customers/_doc/spammer

### bulk documents
POST http://localhost:9200/_bulk
Content-Type: application/json

< bulk.json

### create alias customer and order
POST http://localhost:9200/_aliases
Content-Type: application/json

{
    "actions": [
        {
            "add": {
                "alias": "customer",
                "index": "customers"
            }
        },
        {
            "add": {
                "alias": "order",
                "index": "orders"
            }
        }
    ]
}

### get aliases
GET http://localhost:9200/_aliases

### get all data in index customers using alias
GET http://localhost:9200/customer/_search

### create index person
PUT http://localhost:9200/persons

### update persons mapping
PUT http://localhost:9200/persons/_mapping
Content-Type: application/json

{
    "numeric_detection": true
}

### get persons mapping
GET http://localhost:9200/persons/_mapping

### bulk documents
POST http://localhost:9200/_bulk
Content-Type: application/json

< bulk2.json

### get all persons data
GET http://localhost:9200/persons/_search

### create index person v2
PUT http://localhost:9200/persons_v2

### update persons mapping v2
PUT http://localhost:9200/persons_v2/_mapping
Content-Type: application/json

{
    "numeric_detection": true
}

### get persons mapping v2
GET http://localhost:9200/persons_v2/_mapping

### reindex persons_v2 from persons
POST http://localhost:9200/_reindex
Content-Type: application/json

{
    "source": {
        "index": "persons"
    },
    "dest": {
        "index": "persons_v2"
    },
    "script": {
        "lang": "painless",
        "source": "def usia = Integer.parseInt(ctx._source.usia); if (usia < 11) { ctx._source.kelompok_usia = 'Anak-anak'; } else if (usia < 20) { ctx._source.kelompok_usia = 'Remaja'; } else if (usia < 44) { ctx._source.kelompok_usia = 'Dewasa'; } else { ctx._source.kelompok_usia = 'Lansia'; }"
    }
}

### get all persons_v2
GET http://localhost:9200/persons_v2/_search

### delete persons_v2
DELETE http://localhost:9200/persons_v2

### get all orders data
GET http://localhost:9200/order/_search

### search order using includes
GET http://localhost:9200/order/_search?_source_includes=total,customer_id,items.product_id

### search order using excludes
GET http://localhost:9200/order/_search?_source_excludes=items.price

### create customers_v2
PUT http://localhost:9200/customers_v2

### update customers v2 mapping
PUT http://localhost:9200/customers_v2/_mapping
Content-Type: application/json

{
    "numeric_detection": true,
    "date_detection": true,
    "dynamic_date_formats": [
        "yyyy-MM-dd HH:mm:ss",
        "yyyy-MM-dd",
        "yyyy/MM/dd HH:mm:ss",
        "yyyy/MM/dd"
    ],
    "properties": {
        "username": {
            "type": "keyword"
        },
        "first_name": {
            "type": "text"
        },
        "last_name": {
            "type": "text"
        },
        "email": {
            "type": "keyword"
        },
        "gender": {
            "type": "keyword"
        },
        "birth_date": {
            "type": "date",
            "format": "yyyy-MM-dd"
        }
    }
}

### get mapping customers_v2
GET http://localhost:9200/customers_v2/_mapping

### switch alias from customers to customers_v2
POST http://localhost:9200/_aliases
Content-Type: application/json

{
    "actions": [
        {
            "remove": {
                "alias": "customer",
                "index": "customers"
            }
        },
        {
            "add": {
                "alias": "customer",
                "index": "customers_v2"
            }
        }
    ]
}

### get aliases
GET http://localhost:9200/_aliases

### search customer
GET http://localhost:9200/customer/_search

### bulk insert customers
POST http://localhost:9200/_bulk
Content-Type: application/json

< customers.json

### update customers v2 mapping
PUT http://localhost:9200/customers_v2/_mapping
Content-Type: application/json

{
    "properties": {
        "address": {
            "properties": {
                "street": {
                    "type": "text"
                },
                "city": {
                    "type": "text"
                },
                "province": {
                    "type": "text"
                },
                "country": {
                    "type": "text"
                },
                "zip_code": {
                    "type": "keyword"
                }
            }
        }
    }
}

### bulk insert customers
POST http://localhost:9200/_bulk
Content-Type: application/json

< customers-with-addresses.json

### update customers v2 mapping
PUT http://localhost:9200/customers_v2/_mapping
Content-Type: application/json

{
    "properties": {
        "hobbies": {
            "type": "text"
        },
        "banks": {
            "properties": {
                "name": {
                    "type": "text"
                },
                "account_number": {
                    "type": "keyword"
                }
            }
        }
    }
}

### bulk insert customers
POST http://localhost:9200/_bulk
Content-Type: application/json

< customers-with-banks.json

### Search customer using match all
GET http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "match_all": {}
    }
}

### Search customer using match all
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "match_all": {}
    },
    "size": 5,
    "from": 0,
    "sort": [
        {
            "username": {
                "order": "desc"
            }
        }
    ]
}

# query term bersifat case sensitive sehingga kata Female != female dan tipe data yang cocok digunakan adalah keyword
### search customer where gender = 'Female' 
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "term": {
            "gender": "Female"
        }
    },
    "size": 5,
    "from": 0,
    "sort": [
        {
            "username": {
                "order": "desc"
            }
        }
    ]
}

# query match incase sensitife cocok untuk melakukan pencarian pada tipe data text
### search customer where banks.name = 'BCA' 
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "match": {
            "banks.name": "bca"
        }
    },
    "size": 5,
    "from": 0,
    "sort": [
        {
            "username": {
                "order": "desc"
            }
        }
    ]
}

# query match incase sensitife cocok untuk melakukan pencarian pada tipe data text
### search customer where banks.name = 'BCA Digital' 
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "match": {
            "banks.name": {   
                "query": "bca digital",
                "operator": "AND"
            }
        }
    },
    "size": 5,
    "from": 0,
    "sort": [
        {
            "username": {
                "order": "desc"
            }
        }
    ]
}

# query term bersifat case sensitive sehingga kata Female != female dan tipe data yang cocok digunakan adalah keyword
### search customer where username in ('username1', 'username2', 'username3')
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "terms": {
            "username": [
                "username1",
                "username2",
                "username3"
            ]
        }
    }
}

### search customer where hobbies = 'gaming' AND banks.name = 'bca'
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "bool": {
            "must": [
                {
                    "term": {
                        "hobbies": "gaming"
                    }
                },
                {
                    "match": {
                        "banks.name": {
                            "query": "bca digital",
                            "operator": "AND"
                        }
                    }
                }
            ]
        }
    }
}

### search customer where hobbies = 'gaming' AND banks.name = 'bca' using filter
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "bool": {
            "filter": [
                {
                    "term": {
                        "hobbies": "gaming"
                    }
                },
                {
                    "match": {
                        "banks.name": {
                            "query": "bca digital",
                            "operator": "AND"
                        }
                    }
                }
            ]
        }
    },
    "sort": [
        {
            "username" : {
                "order": "desc"
            }
        }
    ]
}

### search customer where hobbies != 'gaming' AND banks.name != 'bca digital'
POST http://localhost:9200/customer/_search
Content-Type: application/json

{
    "query": {
        "bool": {
            "must_not": [
                {
                    "term": {
                        "hobbies": "gaming"
                    }
                },
                {
                    "match": {
                        "banks.name": {
                            "query": "bca digital",
                            "operator": "AND"
                        }
                    }
                }
            ]
        }
    }
}